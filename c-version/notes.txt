Rules set processing:

ruleset_in:

[binary number of IP mask] [ports] [accept/deny]

So when parsing a packet line:

1. Convert IP to binary number
2. For each item in the ruleset array, check if the IP converted is satisfied by the item mask
3. If so, check that the port matches one of the ports and check the established flag
4. If we get a match, parse the ruleset array item accept/deny flag
5. Else, check the next ruleset item
6. If no matches are found, drop the packet and notify as a debugging measure


IP conversion:

Ruleset: 136.159.0.0/16 --> "10001000.10011111.00000000.00000000" --> "10001000.10011111.********.********"
Packet:  136.159.0.16 --> "10001000.10011111.00000000.00010000"

Compare until either we see a difference, or we reach a star, or we reach the end of the string (35 chars)

How to convert "136" --> "10001000"
if(value >= 128):
  start at first index
else if(value >= 64):
 start at second index
else if(value >= 32):
 start at third index
else if(value >= 16):
 start at fourth index
else if(value >= 8):
 start at fifth index
else if(value >= 4):
 start at sixth index
else if(value >= 2):
 start at seventh index
else:
 start at eighth index

Then (while num != 0):
num % 2 = index_val
num = num / 2
index++
num % 2 = index_va;
etc.
